
Login widget :
---------------



 import React, { useEffect } from 'react';
import { useOktaAuth } from '@okta/okta-react';

const LoginWidget = ({ config }) => {
  const { oktaAuth, authState } = useOktaAuth();

  useEffect(() => {
    if (!authState) return;

    if (authState.isAuthenticated) {
      // User is already authenticated, redirect to home page or desired route
      // You can replace "/home" with your desired route
      window.location.replace('/home');
    }
  }, [authState]);

  const handleLogin = () => {
    // Redirect the user to the Okta login page
    oktaAuth.signInWithRedirect();
  };

  const handleRegister = () => {
    // Redirect the user to the Okta registration page
    oktaAuth.signInWithRedirect({ registration: true });
  };

  return (
    <div>
      <h1>Login/Register</h1>
      <button onClick={handleLogin}>Login with Okta</button>
      <button onClick={handleRegister}>Register with Okta</button>
    </div>
  );
};

export default LoginWidget;


app.tsx 

------------


import React from 'react';
import { Route, Routes, useNavigate } from 'react-router-dom';
import './App.css';
import { Navbar } from './Layouts/NavbarAndFooter/Navbar';
import { Footer } from './Layouts/NavbarAndFooter/Footer';
import { SearchProductsPage } from './Layouts/SearchProductPage/SearchProductsPage';
import { HomePage } from './Layouts/HomePage/HomePage';
import { ProductCheckoutPage } from './Layouts/ProductCheckoutPage/ProductCheckoutPage';
import LoginWidget from './Auth/LoginWidget';
import { OktaConfig } from './Credentials/OktaConfig';
import { OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';
import { Security, LoginCallback} from '@okta/okta-react';
import { ReviewListPage } from './Layouts/ProductCheckoutPage/ReviewListPage/ReviewListPage';
import { ShelfPage } from './Layouts/ShelfPage/ShelfPage';
import { MessagesPage } from './Layouts/MessagesPage/MessagesPage';
import { ManageArtPage } from './Layouts/ManageArtPage/ManageArtPage';
import { PaymentPage } from './Layouts/PaymentPage/PaymentPage';
import { ToastContainer } from 'react-toastify';

const oktaAuth = new OktaAuth(OktaConfig);

export const App = () => {
  const customAuthHandler = () => {
    navigate('/login');
  }
  const navigate = useNavigate();
  const restoreOriginalUri = async (_oktaAuth: any, originalUri: any) => {
    navigate(toRelativeUrl(originalUri || '/', window.location.origin));
  };

  return (
    <div className='d-flex flex-column min-vh-100'>
      <Security oktaAuth={oktaAuth} restoreOriginalUri={restoreOriginalUri} onAuthRequired={customAuthHandler}>
        <Navbar />
        <div className='flex-grow-1'>
          <Routes>
            <Route path='/' element={<HomePage />}></Route>
            <Route path='/search' element={<SearchProductsPage />}></Route>
            <Route path='/reviewlist/:productId' element={<ReviewListPage />}></Route>
            <Route path='/checkout/:productId' element={<ProductCheckoutPage />}></Route>
            <Route path='/login' element={<LoginWidget config={OktaConfig} />} />
            <Route path='/login/callback' element={<LoginCallback />} />
            <Route path='/fees' element={<PaymentPage />}/>
            <Route path="/shelf" element={<ShelfPage />}/>
            <Route path='/messages' element={<MessagesPage />}/>
            <Route path='/admin' element={<ManageArtPage />}/>
          </Routes>
        </div>
        <Footer />
      </Security>
      <ToastContainer/>
    </div>
  );
}




Okta React:

Installation command: npm install @okta/okta-react
Okta Auth JS:

Installation command: npm install @okta/okta-auth-js
React Toastify (optional for displaying toast notifications):

Installation command: npm install react-toastify
